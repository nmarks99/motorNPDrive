#!/bin/bash

if [ -f "configure/RELEASE.local" ]; then
    RELEASE_FILE="configure/RELEASE.local";
elif [ -f "configure/RELEASE" ]; then
    RELEASE_FILE="configure/RELEASE";
else
    echo "Can't find release file"
    exit 1
fi

function find_module() {
    local module=$1
    local module_path=$(grep "^${module}[[:space:]]*=" "${RELEASE_FILE}" | sed -E "s/^${module}[[:space:]]*=[[:space:]]*//" | tr -d '"')
    local support_path=$(grep "^SUPPORT[[:space:]]*=" "${RELEASE_FILE}" | sed -E "s/^SUPPORT[[:space:]]*=[[:space:]]*//" | tr -d '"')
    local local_support_path=$(grep "^LOCAL_SUPPORT[[:space:]]*=" "${RELEASE_FILE}" | sed -E "s/^LOCAL_SUPPORT[[:space:]]*=[[:space:]]*//" | tr -d '"')
    if [ -z "${module_path}" ]; then
        echo "Module ${module} not found in release file"
        exit 1
    fi
    module_path=$(echo "${module_path}" | sed "s/\$(TOP)/./g")
    module_path=$(echo "${module_path}" | sed "s/\$(SUPPORT)/$(echo "${support_path}" | sed 's/[&/\]/\\&/g')/g")
    module_path=$(echo "${module_path}" | sed "s/\$(LOCAL_SUPPORT)/$(echo "${local_support_path}" | sed 's/[&/\]/\\&/g')/g")
    echo "${module_path}"
}

# Note: this won't work if there are multiple IOCs in iocBoot/
# as it just gets the first prefix it finds
function find_prefix() {
    local pattern='epicsEnvSet\("PREFIX", "([^"]*)"\)'
    grep -rPo "$pattern" . | while IFS= read -r line; do
        if [[ $line =~ $pattern ]]; then
            local value="${BASH_REMATCH[1]}"
            echo ${value}
            break
        fi
    done
}

##################################################

# Find the relative path to the MOTOR_NPDRIVE support
SUPPORT_MODULE_PATH=$(find_module "MOTOR_NPDRIVE")
SUPPORT_MODULE_APP="NPDriveApp"

# Find the IOC prefix 
PREFIX=$(find_prefix)

export EPICS_APP_UI_DIR=${SUPPORT_MODULE_PATH}/${SUPPORT_MODULE_APP}/op/ui
export UI_FILE=${1:-${UI_FILE:-topNPDrive.ui}}
export UI_FILE_MACROS=${2:-"P=${PREFIX},M1=m1,M2=m2,M3=m3"}

export CAQTDM_DISPLAY_PATH=$CAQTDM_DISPLAY_PATH:${EPICS_APP_UI_DIR}
export CAQTDM_DISPLAY_PATH=$CAQTDM_DISPLAY_PATH:${EPICS_APP_UI_DIR}/autoconvert
export CAQTDM_DISPLAY_PATH=$CAQTDM_DISPLAY_PATH:/APSshare/epics/synApps_6_3/support/motor-R7-3-1/motorApp/op/ui
export CAQTDM_DISPLAY_PATH=$CAQTDM_DISPLAY_PATH:/APSshare/epics/synApps_6_3/support/motor-R7-3-1/motorApp/op/ui/autoconvert

# Start caQtDM
/APSshare/bin/caQtDM -attach -style plastique -noMsg -macro ${UI_FILE_MACROS} ${UI_FILE} &
